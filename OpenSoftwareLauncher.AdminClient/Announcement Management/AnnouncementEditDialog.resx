<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerTypeUpdate.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIADJAQAAJgAAABAQAAAAACAA4gIAAO8BAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAGQSURBVHicRco7SBtxAMDh3z93CSoJSYiPk6h4PoYauLbhtIEWrArVCg04KEjr
        kAqOHTpKgy6l4AMHUVxKKYKj4BK6pB1MDEhRioMOGooNGM8hIMbkYpLrYuk3fwIhwGbjHwlACCrlMtFo
        tDcUCk3F4/FFfkLdLngPwTMHzvtfG4lEHqZSqe1MJmPout4qjPb2L3V9fc+kSsW6bWsrnE1PZxzFosPt
        83UoitKRPj09H9D1AbmoKL1OVe0qZLM4/H6CgYBWNU2u83kusxfVq3wewzQL8nE67fCbZrmay91ZpZJ8
        e3Qki5sb4XS5KEuSTewlfTG3e1TeN4wVr6q+q9c0759Y7NfGwcGau6bGNTzyKtitPZgMeOqbTaVpAoAP
        q6uftnZ2Dqfs9sdCCABmRnnyfXv4amFpPgcEbRYIpVT63dPSYt/s7Dy3LNiYRX8/O7hVKWZPPq/Mj4XG
        l48BCIfDbxOJhDH0/MXri+SbxpPkxNm3r/oPFZpAIPhPATTA9/RR48L6x5fJkS4aQKK/HxngL0XJjsgn
        kpfXAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACqUlEQVR4nI2T
        TWgTWxiGn8mcCXbqdNIfF4kpvYWrKFiKiFSlpgVBuV5sEa9acaGCFBdiQKEqRaobKbpQIhUVURBxc13p
        7ip4WxdC1YV0oS5CV1HTGOw0o9P0zMxx0UYayMIXXnjP4vnOz/cdLadp1NLF48cBME0TAMuyEEII4C8g
        DnwGnkZq0jUkpSQMwzXxeDw1MjJyWykVV0ohfoM1gCbf99e2tLRs6e7uPhyGIa7rRgAEcADYX2PH/wEc
        x6GzszPZ0dGxoaurqyefz1tSSorFog4gQjjQkk6njNbWVcsL3E2n/6nkIAjwfR/f9/E8DyklhUJhsYAD
        UTsaXfX93bvqI8zO/opKKYIgIAgCPM9jfn6efD4vAMRXqNOnplhwnOoCuVzVUlvqluu6zM3NUSgU9AHX
        ReSUqq//8qXU2NhoVRH19b9i5QpBEFAul5mfnOROLnfECoLX2hgMsugqpYX4t5J7e3sTqVRqXV9f37Zs
        NrtSffzIvoUFnly6NEG/YRCNRk9kMpns+Pi4ymQy2TF4s14IDMPANM2oaZpxy7J2HDu05v7w8LDjeZ7a
        2tw8cR92UldXh23bDYlE4uT09LRKJBInx2DTHl3HMAy6Nq7g2gXBfw+0nkfX9Anv03k1Ojqqksnk5aNN
        TYj29naAOUAmk0lisZi80dDwFuDhwQ80/emjFD0/vjO09+DQ9hvXr069mIw/s2371WvbJiKlZMkRgMHB
        wT1Sys2tzaWlFi7Cu/rP7b53a/SF8v3TpR8rzgBPASKO47DkaLFYZGBg4O9SqbRtdWyWULF2Oey66nIY
        8nz5YwvXdSvDMtPW1nYWIBKJzDgln5lv2qFTQx9237yyriYMoFW+a2XSAHRdp1wuA6gT/dpjO0Ym1qhe
        AijxB+8/b6IsdQB+AglnPaBOGkcCAAAAAElFTkSuQmCC
</value>
  </data>
</root>