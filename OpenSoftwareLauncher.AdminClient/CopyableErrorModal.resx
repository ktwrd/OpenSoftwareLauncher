<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIAC/AQAAJgAAABAQAAAAACAAEgMAAOUBAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAGGSURBVHicNcE9aBNhHMDh3/u/I7lcrpeEpKnioVAFl1ootIkYsNDq6qB2ET+q
        IKWgUOggDtIu6ubg6uAu4uAg4uRi8RyrWKWIH8U00nrRO9vLJeZeJ59H8d8NCkSMkyAIJg7r3OMTCg0g
        LGEDZP7mps805p4fO1p7cnr68rMxb+o2Cn3g4aQFIEZo1JnnxEDHHhNpm8dHp+w9ZZtu1DqYu0itubpy
        FkAmvInXbDNcyVbOZXVG+y99tjZ+6LK973C8xazq93xAxF/0Y57yQnbFdl1X5SxL5ZyiHiknzq1xOr37
        ah1Ixayb5xlmNo7iKPgZoJTwK2ipSc/Rl2YuzI2e0nfYX9krouUVayyH7XBjRyK6tmivFFBMB3n7riQP
        rnlZfm93JHmTfDYaxsmgGXz9vrkZ6lJXjhRSnSVOv7XWrOrgUOPRAlkBVD/f94ZSrq+ufLgrXz5GtfIf
        KZaaRrW6g+Um9cIh66oCYIaMPKabali6yXJjJH8l77gdwxxQ8W7TCNu99/8AyI6NmUiPvgcAAAAASUVO
        RK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAALZSURBVHicpZPNa1xlFMZ/771z
        5+POjDckUWecdtKZJHBDFWGCwRKjTN0olgYKFrKoaQvtVrowYhEsuJJ0o/UPkO40WArq2o2rChYpitFW
        re10xjRt5sbMzL3v/TguMg2CuPKBA4fDcz4ezjlKRPg/UOaKCQIkjyKcRPHGv5jCZYRPADAAxZ67i3Bo
        muWr5+4056pzjeXDyy/OVecaV8/daaJZ3uP8AwYCCG+TgHhStrGzF68s9d1J1xkfHzfdSde5eGWpb2Nn
        xZMyyZC/m0eKAQB1hJfRTNfH6mW35tp23ibsh4zkR3Brrt190C3fuH9jEeEXfOqPJkgRAzEXJJAPCZhw
        0s5o69cW3Ydd/IFPJpvBGXEopoqjBJySHbmtMupNzKGEZD1BNqRNn+PiyVb5qXJuf30/jRcaKKWYXZhl
        YnqCyr5KTjzZOjPDcdmQdrKeEH8bY8i2IBuC3BPo43Q73ZTX8Rh4AwzDYOAN8Doe9eDH1KVFnjtzUE7J
        hiDbsreFKWI+IOKa+CKBDmIdaXSoMU0THWqS2OdA7qEsHv2o+PW6uZo1WAWmdguEnJVAvpFAmoT83O/3
        fW1oNBozbaLRVLItpquzqvx4yTq60Lz97quYhJwlBIOEFeALYnrA95udTU+bmtAMMXIGkamZtNrM1A+x
        dPIznqzMTzZd5Vw6oc6fXlAYmEAWyJLH4pX2b+2OH/uRTmtUQVFK/Ul1rIKteqytrTHY6TjpfO3gM/t4
        6cQ8GBSAFJDhPXJ8PogGn968frMVRIGoxxQHgj+olabk3tY1vvryLe77P2GNlqaiiNfDEJWiuHeVM4Ss
        EFO8e+tuJbbiI4efL9eeiMIwn2ml48jjtSOr3PphFiw11s0Wnu1t7xwyyAE5IM0FsgD8hcX59u/t98vr
        1zefruaSnNGmYPXoPXiHgtWjYO1Qqjj1MOS04tiwfzy0HpDflXV5no+ThMZ/vbJh8N3fOZg9anLO0p4A
        AAAASUVORK5CYII=
</value>
  </data>
</root>