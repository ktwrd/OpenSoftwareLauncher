<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIACQAQAAJgAAABAQAAAAACAAyAIAALYBAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAFXSURBVHicXZCxSwJxHMXf96hISjOCwiEniaOc3SzBQUgSGhQKnMI/KNBFEMKh
        wSAymkpEzmwwkKihwaDyLDPoyPTnKZ73bVAbeuvnPR7vEQAQEZgZAOYsgB0AdOAbgJgwwliRyP7mTnj3
        wOWSPUOTUHt9LF+cnaSO0xll5CBCOBzeOs8XqjobfHnzwhclwfn7Lp9eFarR6N4WiCCB2eoPhWKye8Ml
        usKoVp/MttDM+ptu9KQ1l387GAOzVQKwuOp0evrGgNtCSI2PhvTeFBJoIJXvNKZZh2fdgcUpAGSYJpbt
        dmhqDc8POfx0F1Cv2cDSNOYtM9D00RbbYTKZaXQ63NJ147ZSGX5qjaHotQyde5xKH2UA2EBE8Hq9gStF
        UfvMbDBzd8jcY+accq36vL4A0d85ILcsB+OJRLZQLKpKqaTGE4msW5aDwKiW/h2+BGBlHG4C+JqwXwIc
        rzhkvNXIAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACj0lEQVR4
        nKWSTUsbURSG37lXYvM1GccEjR0x0I1tLZJFxEqDHwQKrWA3LhTrzlBwJwV3pf/DnRZSQqGm2OLOhcFK
        bGun0CK0hUYK48ekzZiJpsmde7vQhNhtHzi78z6ce86VhBD4H1oAYGJiAoQQUEohSZJfkqQbADQAgYs+
        C8BPIcQXIUTJcRxwzpHJZM4FTfT6ZHl0IB4fHRgcjIVDoTAAGMfHRm57eye3ublRsqwNAHuXJqiH1VDo
        wXQyOa+Fw5ri8eDl+j6udmvwXOmMDNy5G7ne3387tbQUODKM1bqEAIAQQvb6/Ynpubn5NlXVZLcbAPD9
        21dwIeGwIJB9T1AsK9pMMjnvk+WEEEJuCBzH6YvF4yN+RdE8LheIJAEAbNsGJYDsI4h0teLthyoq3K8N
        DQ+POI7T1xAwxiK3otEYAJycnSFvmsibJn7k91GwbRRsG6U/ZbSrFJu534jGYjHGWKRZ0BZQlI76MnqC
        QfQEgyiVymj3+Rp1TVOw89FEQFE6GGNtjSUyxgghBPwiDAD3EgmMjY3h8ZPn4JIXAi0QkCBRCkopGGOk
        WWDZlnXkCQS661Ok0mnMTE3hVepR40wCgFWt4vTk5IgxZjWeUKvV8u+2tvQWSsE4BwAEVBXPUikEVLVR
        PkVBq9uNXDar12q1fPMV9Nerq9mqbRvOhaAuaYZzDlKpGC/S6azjOHpDwDkvHh4crD9dXFyxCgWDEoJ/
        oYTg1LKMxYWFFcMw1jnnxUs/kXOuf9J1Oj05WXk4Ozt0f3z8ZmdXV7sE4MAwCm/W1j4vLy9vmaaZkWVZ
        r+ckIQSi0Siq1SqKxSLK5bLqOM4ggF4AwYs+E8AepXTb6/X+UhQFLpcLu7u754L/4S+6oyWJnlCo3QAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>