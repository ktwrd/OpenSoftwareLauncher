<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIACeAQAAJgAAABAQAAAAACAANgIAAMQBAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAFlSURBVHicPc6/TxNRAMDx73v3erRVzlYgJVAgYXBxMQF0cwIXZiGpxtTN/0E3
        E0gYCRMMTkx0NjHuoAw6GRl0UCkFW7WFu17v3o9zId0/w0cAPNn+sLq8UK2lqdbWOqGUks2LbrTV+Pw6
        Pqg3IRMKYGaiOL3yYLr2uxNjUoHWlqnAZ7N+v7zb23l58l58kwADrbm6xLlE6jAKXS+8sv+6oZmr3F5b
        enRn3WWgAMr+hPoefZIX3RYnvY/yYek5+bx046WCq1QnOwASwNo0l/N83p2+YXX2BbfyZZxIMNbIJE4L
        Q9gdtNV8cJdXi/v8uPyCGBkwX51jfKyENYk3hGP+VO6o9ZaN4zq/+l8xWtHstAjjECVlDq6P7ehUPa4s
        Z397f7KV2adZlIb4qpzdKBSzQZKqIbQ6CiZHR0Tt3jMv1I5iFqCN8UZvKoRNgiE8O2/39xqHP7WxsUB6
        AAJhpUfh7LzdB/gPmvGelZyJA7cAAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAA
        AB/z/2EAAAH9SURBVHicjZE9aJNRFIafc78vsVVaK6GCVUsFqWjBTdApomIXpejWqYiLuOmii1C7O4gQ
        ChZ1EKdQFyexRRBFhRLwB20Ta5KCQtOmaZKmSfvlHockpDGpeIf7XrjnPPd9zxVVBeD06PRFoId/rynQ
        GKq8vnsOALd+pwce3QiG1kseZWsplxVrFaoPRBOLjE/FrwMCRGtdpt6vTmnTY7VQJJMvks4WWEyv8Xsp
        z69Ujly+wLNbZ0OoDgL9LQEigjHgugafz8HvNziOQURIpTM8mXzD+f4dD2QtdafWtjWCg0AForhunb2x
        AcePHkZV6enu4OXseqSFA+uKQCw3g4jwIz/DzciJJie12mYHqq4g3Pt8lQsHr/FiYZzQqQjL2RzxZJI2
        fxtLyyvs6z4Jqq0A1icCE8FPXJkeYCL4BWuVQGcHe44N4HmWvv29GCOg1tcK4NZm8PjMV6wFY6hqfSaO
        Iw0RTIMDhO8rHxARZjMfGXl1BGOErb/jOKbBQQMAgdF3w4Sj9xl7P8zTwTlypSJzCwlS2VW+/YwhwnYR
        1CdAeCjO5ee9hIcSWKt07Wyns+8Qqsre3V1VgG7nQBCByUtJRGiwX1FBkNYRxG7uEiqFInX9GyJSqW2O
        4BUDrjG0uz60EqmqoJUNVfC7DnjFQDOgvDk/cvvhW/5ryXzt9AeW0ttvoBRkQgAAAABJRU5ErkJggg==
</value>
  </data>
</root>