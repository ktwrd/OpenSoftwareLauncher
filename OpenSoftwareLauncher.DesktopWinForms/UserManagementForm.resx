<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIADPAQAAJgAAABAQAAAAACAAOwMAAPUBAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAGWSURBVHicPcrPa5JxHAfw9+f7PM8kzSfNR0k3sFXSenyobFpRBpuxMYK2HQ12
        2KDD6BfsL9jFIIgudewajE7NWwRBBRZ0CNmg2iaKzmGw/EE+mul332+nep1fwD9EYIwBAJ6lDt19fsNb
        fHyVMhJgEiD2P0rJhBC634ljja5j+dz0zKhxavz2GBAhYpIBkgBQ1DAyM+MXc0NdPHWNmM7E4gKGfGHH
        byAJhcAURZEGEJlKxe69fLFiXb5gzv7YKYl6Pt/f/759YAEWBpyYkISkX7GuRb2qHtDlZHK4sctqe1/e
        fmhv8mphz9Q2QCRVccAJRNnXf8qvttazt9hJrRNMP4pxmHrw5pwjwGuzgfznukpEEpOt4+nyfZ7mX3nO
        lSS7Feh0Q6podvoeyxmcLwtXmMIP3ixNJM7ciQ1r8fNH2vj00z3IlarbH9+vrzVCazvoKTqEVlHdSn/J
        qw3ixVrvl6fftSt1pkc8/ug335WRxpPMQwZAACBcWj2LZs+A6rZRyLZwOn0UfP8wfI4Krr8romYTmifE
        X/ncll1QOIgDAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADAklE
        QVR4nKWS3UtbdxzGP7/kxJNXUTNfg22KqXYu0ajRYbvRysbG1oqru9CC86aMbQw2GYXB2MD/YFe9ku2i
        QmVXgwqlG5W9MCgtM3SiLErTSmKcumRZXkjO8STnt4viywq72nP9fB6eL99HXAkKJPDzGgiOdO2sBMBi
        wScEs0AXsC4ls6ZJ6sAn2sQRdjzA54GQR3KiibkzPcFR1eP2phJJPZ1MLST2ePfAZ+E/lCrA6rbo2MsS
        /DOXa7Y3eJWXxsZce1mC8RQd8RTEU6A8wzUDHwF+YHNfkNvNYpudmcHpclE1TXaz2KwWLgBxAEUeoyV8
        2jc0NBnq7fU+XF7OJB9Gi6UyebWmBr1UQrHZKJVBtdIPfAWgnO88uvyHDTk8+/EbrcHOVlY32lon3on+
        7bKRj8di+AMB4rEYLhsA7QeMMtJ5yE882Kk9HQ75MTSNcMhPjafW3dGWF0vfLEQHXnu9f/n776LupwHP
        HQZUzMMAy0Svvq4VCmcrhkHVMLgUNtY221vS9uQf3kBnFz8tLsh7U91r7qx2Z7e9lm2fG+W2/QqB6hqB
        /ZWFFpfel97e6rc73fZSqbCvdTYU6t679kI1mfHdK3dTnfliYOREY8t8dLGoGXo9FfOmcscxCVYVrDZe
        zd+4aV2YG2kPDkcePV7ZqRufGnB6mh0Jt874hXGWfnzCSU+T74O+t6/+trW+sfTovvvYDmTkbu30xXTm
        L9EfGSSXL9purQ+tbCbULU3TyGQyaJoGQHW/op5pOBmSef2csE4t1mGxTTpVpfv90dB4Y27V51czbOpe
        0vWns9dv313WLIniYCy69GA49Yo0qg70qlMaph0h5hSqxtXRwfapga7W5731HjWhn+KTy+f5/NsEp5oa
        6z97a/TlX2Pbv9/K9KiiPH9ZKk+OlZZY0PORHn9D2KyYKsCzdc2Kqfb4G8Lo+QiPxxCltn9NV1jf/HIa
        KaelVS1LxVFEcZTO7Vy//0vLhy+KiuYUlbJLVHUHgnngBoDZ9TXSePp/IaXk/+gfRu9BOH4sCScAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>