<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIACsAQAAJgAAABAQAAAAACAAhAIAANIBAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAFzSURBVHicTY0/SwJhAId/7931yqXhHw4VpPCwLTIuVEQCk5YGh76AhDi09QmS
        xoaIhgra2nILXBoChwgUIrUoqKUkkjgOJUXrPPPubTHqgWd74CEgBOA4/MIDACEwRyPk8/loPB7PlEql
        XdwAk1eAuw64tgHHuBez2exCpVI5azabWiQSmSZaMHgyGYst8abJvmZm9OdcrkkHA+qSJNnn84Uajcar
        oijLwsDvjzpkeVZXVdBAAItzc2HLMND7/ISqqma73eYNw+CEx5cXGjCMkfXx8c2GQ0G/vxfQ7xPRbgel
        lNc0jQDghWtN23fL8qYUDrvfzs/vjmu1I48oOlZWVyOpVGqdUkoBMADA1sHBzmmxWM9MTCj4g0un05uF
        QuHJZrOFwAByuLe3cVutPmB+3s0Y45PJpMBxHJxOp0uSJCWRSExxBGAXl5fffV33pjyeNUKI6fV6mWVZ
        pNvtdlqtVr1cLvfIeOMH4AHQAfD+b0/Gsh/BcIyLuTNWCAAAAABJRU5ErkJggolQTkcNChoKAAAADUlI
        RFIAAAAQAAAAEAgGAAAAH/P/YQAAAktJREFUeJyNk0FLG0EUx3+7mV3MpmuixMOGiHhosaDkUIpFJI30
        VIr20orQq4QehJxKb40foaR4aOmh4LGn4gdovZYWEaH0InoJmtgQN9mYpLOb6SHGGongHx785/B+896b
        N1pR0xik9dVVACzLAsC2bYQQAngMOMBRPp/f0gdmD5CUkk6nc9txnHQ+n3+vlHIAxA1yDWDU9/078Xj8
        wfz8/ItOp4PneXoPsAw8H3DjNwDXdUmlUsmZmZnp2dnZh6VSyZZSUqlUQgCiA8vxXC5tjI+PXQZ8zOWe
        9XwQBPi+j+/7NJtNpJScnJx0AS6YUdMca+zu9pdwenphlVIEQUAQBDSbTVqtFqVSSQCIPxAO7e3x13X7
        AcVi31E7fy3P86jVav8rKCoViRwf10dGRuy+jEjkwvZaCIKAdrtNq9WiWq12h3gKn77v7GSvDjE3NfW5
        5zOZTCKdTk8tLS3NAbd0Xefs7Kxb0lPDwDTNl4VCYX97e1sVCoX9DfhxVwgMw8CyLNOyLMe27UepVOrN
        5ubm0eHhoTIM45VSCsLhMNFodDiRSKwdHByoRCKxtgH3FkOhHgDLsojFYjiOM53JZN6Wy2WVTCbXlFKI
        yclJgBogk8kksVhMvhse/gkwWq1Sr9eB7kqHw+HfxWLx68LCwq9oNHoEoEspOQ8dIJvNLkop77fbbSzL
        Ymho6PJofE3TvgAfgC0A3XVdzsOsVCqsrKw8qdfrc41Gg0ajgRDiKqRPwvO83rKUJyYmXgPoul7WrvzS
        6yCaUupa+k30D2Yr+2+sFr2SAAAAAElFTkSuQmCC
</value>
  </data>
</root>