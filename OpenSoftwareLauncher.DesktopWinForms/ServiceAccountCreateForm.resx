<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIAC5AQAAJgAAABAQAAAAACAA9QIAAN8BAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAGASURBVHicVcy9SxtxHMfxz/fy++XOpOdpbBJKg+BDQmmkXbROEheRtpMtTuKg
        4OAfkEEplBY6ptBC6Sj+AQ6lBGcfRl0KHRzygBGbh9rmQs67mMvv66CDvsb38CYGiEAMMPgbpjoScV2i
        fVjG6cJ0+ofrOD+dxfImAUDrE6IiZXyQyYk34sFA7Pe/prtWKJdkenq82r4oVIrFvHYESG9s8mPf/Nd1
        fpiK85VHpz5CzcijNBtuMChpOKiMV8JbxXNlDrxV3ajyGgL0v0Izuomtdstf/PVXOsXWvp13lrRyBVH3
        7HiwtrsC4Zwx2z3WfeZR5eJ7w1bvil6d9tAUsVRoI/4kJhg9GKYN17cgTQNGp197PWIh5dgv+zKNWaEF
        8OfLTvdg7qneM8JdXZekXZXaKuB1/d08VIJ69HgQHdxIZOJyLI17noUjVnIBgAAAYgYB7wPLK4UXQ1b/
        ZTgarJErQuf1i8SQpU4+57arikF095HNZk2lVASAm8vl6reZAPA1n16bQzlDTiwAAAAASUVORK5CYIKJ
        UE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAK8SURBVHiclZNPbFRVFMZ/970zj5nO39JW
        GHEqCcHCBhuH6rYsWEhcKAYSIiEuati7rDGRlSyIMZHNLHDpoppqTIxxI64UcEZZaAo2oM1gFYbMzJvp
        vM579913XQwUpCtOcnJykvN9OV/Od1S7BgCuCzt2gOeBUmyLc3aMD8jWgCrQwNqzDBKcJwetZd5aatZy
        2VquPai1920wj7bVhaNvV9G2SmgBkMewhSRhUad3vpY6MLvbyY/nSWdS6FAvXK2/cqXrn6mY2PeND2EC
        UMfSUH9/DI4DKU/OZw4cOZV5cXYP4S2XXmdEm0ox99MKhSNz22RdXv6+IUEAjsN8dtfhNzJzixVrIqX7
        /5D4fwGgRJh1XX795kdQDtHRfawtXf+jj+qjaEiwCcCp0jOTk2bQUzYxbN5vYTqtEYHrcmEqhfPsGPO/
        3KVt2hSCZGfoOTORKKTfA+AFpW/ngt8+QmvNxEvvwNrFR7tmMty/eZNDQcj12potb4TRjGvp5QXxfRAh
        5wx7XjS4Q7c7ZGIiZKN5dwufq+yi1+pzYa+HZPPq2tcb63EMtmtwwpBaEKCsDgEIgtF52u3NrQQYDJIR
        m44IAlQYUgtDUEsnqJ9YfLlKPg/FIp31NuOVKTAG4niUWtNpthifzI16Y/j8w58bwGEBGl+cr6u3vpRb
        Xy14B72s56bS4opKHJUYlVisiUmiyBo9jM3rl6KVz47H+4DGQyOd/bOfplyeOvfJVfveq88PVne797bd
        /F8zwbdrhf3lsjp9u9c6uTcbPHLicvsQ09OppaHIsR8Y/7SUL/XT6fQWeDgc0u1288NC59j0WLy03C7z
        bvbK/60sIr9XKhUjIm+KyAqwCvhAUUT2l0qlg7lc7rtms3lDa71F/vgvICI3isXiqud5zwEzQBYYAOtR
        FNV93zdPSlPW2m16nyb+Aw6PO16Iqj3IAAAAAElFTkSuQmCC
</value>
  </data>
</root>