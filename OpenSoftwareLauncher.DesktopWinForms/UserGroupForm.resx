<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIACgoAAAAAIACaAQAAJgAAABAQAAAAACAAOgIAAMABAACJUE5HDQoaCgAAAA1JSERSAAAACgAA
        AAoIBgAAAI0yz70AAAFhSURBVHicBcG9ThtBFAbQ794Z72J7JWMiEQoaRBGKFEkwFaDkCVIhodRUiNfg
        KSjoKFAKCj8AEkqVJkKRkgrLQkZgHILXrPdvZu7lHDo4npxI3EYdJCgxAQJiKwrAMlHk8oRDeWqnlaOt
        v2fVcv3UU3ClAAXnYcSbmvnx57u92xTxop2mWYiK/+tJHD569TUUHKRUlsBwYVxm6XhcsViZp/H15rfL
        /t3NDVvjLBhsjToJptvpPrvMdoqHgbEmcDGIiq9Ln3vbocyR1wFOBDaKMUrTWfJcnBtuervQ7jab8+x6
        /vuPELSGKBkAYOI2m6ckfuPLFhrWxMk9T9ZCUqGvDGYApFAQVBkNav17GzcbdwQA+xfJbsT2g4jUqkIA
        QMTsg3+Rjfz8+3vUFkDjZWSOvuzu7E8nGUqZASxoJQsYDkZZ/zD/AeiQACx1evhkV7FCBA8GQaBgkMzg
        5lf4VVUYvgIArrHrFgcyhAAAAABJRU5ErkJggolQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/
        YQAAAgFJREFUeJyVkc9LFGEAhp/vm8lyrdx1PPTD3NZAc5UgRlnQlIT9C6JjFzHYS3QYwcDOHuowpy6C
        4EXw1K1bYqEGBW4tBuootrSwoyC7tGgzuu7O18FLHWL0vTynB17eV4xN7X/UNC0bBIElpbTPynq9bs5M
        tj7UlVJZwJFSZgDOSiEEAPre3q7V1nYrc+fL7JPLpXw7ITk0EoWd1Oic6xYtMMb1aDRmA+ilfPvd4aG4
        Oqr+I9Q9j9rBIVIptKZGvm9sANDSYpx6a2s5a2DgQaZsJArLS8thBTgxEgWAXO6rBTfH9e7uHhtgPzU6
        F2r/lWSy1wYQHem3Kp0eyaxTelqhmggTm2nIJzFmFhY+TO+8fyT0/v5+G6DiVeJDZmdrEAQAeNUaB0dV
        FAKkRAiJpus46zsBEYO+PvN0g81N10qlOjPNx/xYWVythza4dPUnEXCcPQvi43pvb4cNkIx1zJ5ng56e
        2zaALBZrpu+rru3t4+nz0HUDE0CMjO1iGBfwoq9oigh8X9HY+H/+9hSRXy8olU5YnLmGiF0fZPj1J6Rk
        WkjMsOoqIBsEZJYmBim7KwiAli64/4zV549fmsd+Fc/zOayWqeEhNIGmC6QmaLjYwPy7+ey3N/SVHVBK
        oQNG2eFG/jNbk4Wp0PF8l62ywz2gCJQEEAGuANo5TqgDB0op7w+ZmwnpTKitKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>